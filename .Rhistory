unlink('Automated Report_cache', recursive = TRUE)
data
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v2.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timseries_njump_data,caption = "Data With Outlier Type of NJUMP")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
plot(pressure)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
selected_folder = "data-2020-08-22 23:59:45"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",sep=""))
selected_folder = "data-2020-08-22 23:59:45"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
print(getwd())
selected_folder = "data-2020-08-22 23:59:45"
directory = paste("/output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
selected_folder = "data-2020-08-22 23:59:45"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
---
title: "Sample Report"
output: word_document
params:
data:"input_data/sample_data.csv"
---
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(timeseries_njump_data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(data,caption = "Data With Outlier Type of NJUMP")
kable(timeseries_pjump_data,caption = "Data With Outlier Type of PJUMP")
plot(pressure)
selected_folder = "data-2020-08-22 23:59:45"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
selected_folder = "1"
directory = paste("/output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP",".csv",sep=""))
selected_folder = "1"
directory = paste("/output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv","",sep=""))
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv","",sep=""))
paste(directory,"TIMESERIES-NJUMP.csv","",sep="")
# Generate a Folder using the current date as a Name
directory = paste("output_data/data-",Sys.time(),sep="")
# Change the directory format so anyone can use it
directory = paste(directory,"/",sep="")
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
t <- paste(directory,"TIMESERIES-NJUMP.csv","",sep="")
njump_data <- read.csv(t)
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
t <- paste(directory,"TIMESERIES-NJUMP.csv",sep="")
njump_data <- read.csv(t)
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts-data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts_data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
View(njump_data)
View(njump_data)
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts_data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
kable(njump_data,caption = "Data With Outlier Type of NJUMP")
View(njump_data)
View(njump_data)
View(pjump_data)
View(njump_data)
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts_data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
summary <- read.table("Generated Reports/output.txt")
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts_data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
summary <- read.table("Generated Reports/output.txt",header=FALSE)
selected_folder = "1"
directory = paste("output_data/",selected_folder,"/",sep="")
njump_data <- read.csv(paste(directory,"TIMESERIES-NJUMP.csv",sep=""))
pjump_data <- read.csv(paste(directory,"TIMESERIES-PJUMP.csv",sep=""))
ts_data <- read.csv(paste(directory,"ts-data-rows.csv",sep=""))
summary <- read.table("Generated Reports/output.txt",header=FALSE,sep = "", dec = ".")
a <- read.csv("Generated Reports/output_logs.csv")
a
new_data <- data.frame(
DATE= current_date,
PJUMP.Count = pjump_count,
NJUMP.Count = njump_count,
NULL.Count = 0,
Calculated.Mean = mean_of_returns,
Calculated.SD = sd_of_returns,
)
c(0)
new_data <- data.frame(
DATE= c(current_date),
PJUMP.Count = c(pjump_count),
NJUMP.Count = c(njump_count),
NULL.Count = c(0),
Calculated.Mean = c(mean_of_returns),
Calculated.SD = c(sd_of_returns),
)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
new_data <- data.frame(
DATE= c(current_date),
PJUMP.Count = c(pjump_count),
NJUMP.Count = c(njump_count),
NULL.Count = c(0),
Calculated.Mean = c(mean_of_returns),
Calculated.SD = c(sd_of_returns)
)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(new_data)
View(new_data)
new_data <- data.frame(
DATE= c(1),
PJUMP.Count = c(2),
NJUMP.Count = c(3),
NULL.Count = c(0),
Calculated.Mean = c(4),
Calculated.SD = c(5)
)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(new_data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
View(new_data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
directory = paste("GENERATED REPORT/","output_logs.csv",sep="")
log_data <- read.csv(directory)
directory = paste("Generated Reports/","output_logs.csv",sep="")
log_data <- read.csv(directory)
directory = paste("Generated Reports/","output_logs.csv",sep="")
log_data <- read.csv(directory)
View(log_data)
View(log_data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
sample(seq(as.Date('1999/01/01'), as.Date('2000/01/01'), by="day"), 12)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
View(data)
CDSP. TRADIG.USD.SNRFOR.MR14.060M * 50
"CDSP. TRADIG.USD.SNRFOR.MR14.060M" * 50
"CDSP. TRADIG.USD.SNRFOR.MR14.060M" ** 50
rep(5,2)
rep("CDSP. TRADIG.USD.SNRFOR.MR14.060M",100)
rep("CDSP. TRADIG.USD.SNRFOR.MR14.060M",100)
rep("CDSP. TRADIG.USD.SNRFOR.MR14.060M",100)[0]
rep("CDSP. TRADIG.USD.SNRFOR.MR14.060M",100)[1]
data
data[3]
data[,3]
min(data[,3])
max(data[,3])
0.028301
sample(0,2)
sample(5,2)
sample(c("PJUMP","NJUMP"),100)
sample(c("PJUMP","NJUMP"),4)
sample(c("PJUMP","NJUMP"),2)
seq("PJUMP","NJUMP")
a <- c("Ar","Ba","Bl","Bu","Ca")
sample(a,length(a),replace=FALSE)
seq("PJUMP","NJUMP")
a <- ("PJUMP","NJUMP")
a <- ("PJUMP","NJUMP")
a <- ("PJUMP""NJUMP")
a <- c("PJUMP","NJUMP")
a
b <- sample(a,10,replace=FALSE)
t <- rep(c(0,1),100)
t
t <- rep(c("PJUMP","NJUMP"),100)
t
t <- rep(c("PJUMP","NJUMP"),1000)
t
sample(t,100)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
1000 * 5
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
fake_dates
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
sample_ft = sample(c("PJUMP","NJUMP"),n)
sample_ft = sample(c("PJUMP","NJUMP"),n,replace=TRUE)
n =10
sample_ft = sample(c("PJUMP","NJUMP"),n,replace=TRUE)
sample_ft
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
sample_ft
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
fake_values
dat
data
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
data
data[5]
data[4]
data[,4]
returns_vector
min(returns_vector)
max(returns_vector)
n = 10
min_value_r =-0.1020402
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = runif(n,min=min_value,max=max_value)
fake_returns
n = 1000
min_value_r =-0.1020402
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = runif(n,min=min_value,max=max_value)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,min=min_value,max=max_value)
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=max_value,sd=min_value)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=71,sd=m3)
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=71,sd=3)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=71,sd=1.3123)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=71,sd=40)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=1,sd=71)
fake_returns
min_value_r =-0.10204
max_value_r = 71.34989
# Generate Fake Values From Min and Max of RETURNS COlumn
fake_returns = rnorm(n,mean=min_value_r,sd=max_value_r)
fake_returns
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
data
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
View(data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
View(data)
dim
dim(ts_data_rows)
dim(data)
View(ts_data_rows)
View(ts_data_rows)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
340 + 325 + 335
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
fake_returns
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(data)
View(data)
data
data$VALUE
data$VALUE
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
data
data$VALUE
hist(data$VALUE,main="Distribution of w1",xlab="w1")
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
hist(data$VALUE,main="Distribution of w1",xlab="w1")
plot(data$VALUE,data$RETURNS)
clear
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
plot(data$VALUE,data$RETURNS)
plot(data$VALUE,returns_vector)
View(data)
Sys.time()
View(data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/fake_data_generator.R', echo=TRUE)
fake_returns
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
directory = paste("Generated Reports/","output_logs.csv",sep="")
log_data <- read.csv(directory)
View(data)
View(data)
hist(data)
hist(data$VALUE)
hist(data$RETURNS)
data$RETURNS
hist(data$RETURNS)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
plot(data$RETURNS)
hist(data$RETURNS)
data$RETURNS
returns_vector
hist(returns_vector)
plot(returns_vector)
plot(daat$VALUES)
plot(data$VALUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(z)
View(z)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(data)
View(data)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
View(z)
View(z)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/base_script_v3.R', echo=TRUE)
data
plot()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
directory = paste("Generated Reports/","output_logs.csv",sep="")
log_data <- read.csv(directory)
View(log_data)
View(log_data)
plot(log_data)
PLOT(log_data$Calculated_Mean)
PLOT(log_data$Calculated_Mean)
plot(log_data$Calculated_Mean)
plot(log_data$PJUMP_COUNT,log_data$NJUMP_COUNT)
data
data()
data(trees)
data(trees)
View(data)
View(data)
force(trees)
VIew(pjump_count)
View(data)
View(trees)
plot(trees)
cor(trees$STBM, trees$LFBM)
hist(trees)
hist(trees$Girth)
hist(trees$Girth, trees$Height)
data("mtcars")
force(mtcars)
View(mtcars)
View(mtcars)
hist(mtcars$mpg)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
force(mtcars)
data()
data("diamonds")
force(diamonds)
View(diamonds)
plot(diamonds$carat, diamonds$price)
data("Titanic")
force(Titanic)
View(Titanic)
hist(Titanic)
summary(airquality)
plot(airquality$Temp, airquality$Ozone)
plot(airquality)
plot(airquality$Ozone, airquality$Solar.R)
plot(airquality$Solar.R,airquality$Ozone)
plot(airquality)
plot(airquality$Ozone, type= "b")
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
hist(air    )
hist(diamonds$carat)
View(airquality)
View(data)
View(diamonds)
force(mtcars)
View(mtcars)
force(trees)
View(trees)
hist(trees$Height)
head(airquality)
head(airquality, 3)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(g)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(g)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(g)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(g)
View(g)
ggplot2(g)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
source('~/Documents/Program Files/My Scripts/R/Projects/Actual R Project V2/plot_generator.R', echo=TRUE)
View(midwest)
force(airquality)
force(mtcars)
force(Titanic)
force(trees)
View(g)
